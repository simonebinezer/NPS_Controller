pipeline {
    agent any

    environment {
        SONARQUBE_SCANNER_HOME = tool name: 'SonarQube_Scanner' // Matches the configured scanner tool in Jenkins
        SONAR_PROJECT_KEY = 'NPS_Controller'                // Unique identifier for the project
        GITHUB_REPO = 'https://github.com/simonebinezer/NPS_Controller'
        SONAR_HOST_URL = 'http://18.237.49.246:9000'          // SonarQube server address
        SONAR_TOKEN = credentials('Sonar_Token')         // Jenkins credentials storing the SonarQube token
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning the GitHub repository..."
                git branch: 'main', url: 'https://github.com/simonebinezer/NPS_Controller.git'
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    script {
                        // Using Jenkins-managed SonarScanner
                        def scannerHome = tool name: 'SonarQube_Scanner'
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                            -Dsonar.host.url=${SONAR_HOST_URL} \
                            -Dsonar.login=${SONAR_TOKEN} \
                            -X
                        """
                    }
                }
            }
        }

        stage('Save to Local Folder') {
            steps {
                script {
                    def localFolder = 'C:/NPS_Controller' // Replace with your desired local folder path
                    echo "Saving repository files to local folder: ${localFolder}..."
                    if (isUnix()) {
                        sh "mkdir -p ${localFolder} && cp -r * ${localFolder}"
                    } else {
                        bat """
                            if not exist "${localFolder}" mkdir "${localFolder}"
                            xcopy /s /e /y . "${localFolder}\\"
                        """
                    }
                }
            }
        }
    }
}
